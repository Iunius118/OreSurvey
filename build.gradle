plugins {
    id 'fabric-loom' version '1.6-SNAPSHOT'
    id 'maven-publish'
}

version = project.minecraft_version + '-' + project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    // Add repositories to retrieve artifacts from in here.
}

loom {
    // splitEnvironmentSourceSets()

    mods {
        "oresurvey" {
            sourceSet sourceSets.main
            // sourceSet sourceSets.client
        }
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    // mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
    inputs.property "version", mod_version
    inputs.property "minecraft_version", minecraft_version
    inputs.property "loader_version", loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": mod_version,
                "minecraft_version": minecraft_version,
                "loader_version": loader_version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
    it.options.encoding = 'UTF-8'
}

java {
    // withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}.txt"}
    }
    from("README.md", "CHANGELOG.txt")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
